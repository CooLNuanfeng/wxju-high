<template>
<view class="container">
  <!-- <view class="area-title"><text>预览区</text></view> -->
  <view class="preview" style="background: #{{bgColor}}">
      <canvas canvas-id="canvas"></canvas>
      <canvas canvas-id="people-canvas"></canvas>
      <canvas canvas-id="text-canvas"></canvas>
      <view class="text-bg" hidden="{{textHidden}}">
          <view>预览区</view>
      </view>
  </view>
  <view class="content">
    <textarea value="{{words}}" placeholder="请输入文字，支持空格和换行" maxlength="50" @input="inputFn" />
  </view>
  <view class="bg-color">
      <view class="color-select">
          <view class="{{bgColor=='transparent'?'active':''}}" @tap="changeColor('transparent')">
              <image src="../images/empty.png" ></image>透明色
          </view>
          <view class="{{bgColor=='ffffff'?'active':''}}" @tap="changeColor('ffffff')">
              <text class="bg1"></text>ffffff
          </view>
          <view class="{{bgColor=='ff01ae'?'active':''}}" @tap="changeColor('ff01ae')">
              <text class="bg2"></text>ff01ae
          </view>
          <view class="{{bgColor=='28d7b0'?'active':''}}" @tap="changeColor('28d7b0')">
              <text class="bg3"></text>28d7b0
          </view>
          <view class="{{bgColor=='77cff0'?'active':''}}" @tap="changeColor('77cff0')">
              <text class="bg4"></text>77cff0
          </view>
      </view>
      <view class="color-custom">
          <text>自定义颜色: </text>
          <input type="text" placeholder="请输入6位颜色值" maxlength="6" @input="inputColor" @blur="blurColor" @focus="focusColor">
      </view>
  </view>
  <view class="btns">
    <text class="btn-clear" @tap="toClear">清空内容</text>
    <text class="btn-save {{!words?'btn-disable':''}}" @tap="toSave('send')">直接发送</text>
    <text class="btn-save {{!words?'btn-disable':''}}" @tap="toSave('save')">保存到相册</text>
  </view>
</view>
</template>

<script>
import wepy from 'wepy'
import JuhighPeople from '../libs/juhigh-people.js';
import JuhighText from '../libs/juhigh-text.js';
import posJson from '../libs/juhigh-pos.js';

export default class Index extends wepy.page {
  config = {
      navigationBarTitleText: '举牌表情生成器',
  }
  data = {
      words : '',
      peopleImg : '',
      textImg : '',
      type : 'square',
      bgColor: 'ffffff',
      resultImg: '',
      textHidden: false
  }
  onLoad() {

  }
  onShareAppMessage() {
      return {
        title: '举牌表情生成器',
        path: '/pages/index'
      }
  }

  methods = {
    changeColor(color){
        this.bgColor = color;
    },
    inputColor(evt){
        var color = evt.detail.value,
            re = /^[0-9a-fA-F]{6}$/;

        if(re.test(color)){
            this.bgColor = evt.detail.value;
        }else{
            this.bgColor = 'ffffff';
        }
    },
    focusColor(evt){
        var color = evt.detail.value;
        this.bgColor = color;
    },
    blurColor(evt){
        var color = evt.detail.value,
            re = /^[0-9a-fA-F]{6}$/;
        if(!color){
            return;
        }
        if(!re.test(color)){
            this.bgColor = 'ffffff';
            wx.showModal({
                title: '提示',
                content: '颜色值不正确，已改为默认的白色',
                success: function(res) {
                    if (res.confirm) {
                      // console.log('用户点击确定')
                    } else if (res.cancel) {
                      // console.log('用户点击取消')
                    }
                }
            })
        }
    },
    toClear(){
        var peopleCxt = wx.createCanvasContext('people-canvas'),
            textCxt = wx.createCanvasContext('text-canvas'),
            t = this,
            platform = t.$parent.globalData.platform;

        t.words = '';
        t.bgColor = 'ffffff';
        t.textHidden = false;
        peopleCxt.clearRect(0, 0, posJson[platform][t.type].canvas.w, posJson[platform][t.type].canvas.w);
        textCxt.clearRect(0, 0, posJson[platform][t.type].canvas.w, posJson[platform][t.type].canvas.w);
        peopleCxt.draw();
        textCxt.draw();
    },
    inputFn(evt) {
        var t = this,platform = t.$parent.globalData.platform;

        t.words = evt.detail.value;

        if(t.words){
            console.log('ddd');
            t.textHidden = true;
        }else{
            console.log('vv');
            t.textHidden = false;
        }

        if (t.words.length >= 50) {
            wx.showModal({
                title: '提示',
                content: '为了图片更加美观，请保持在50个文字以内',
                success: function(res) {
                    if (res.confirm) {
                      // console.log('用户点击确定')
                    } else if (res.cancel) {
                      // console.log('用户点击取消')
                    }
                }
            })
        }else{
            // console.log(platform,'input');
            var peopleCxt = wx.createCanvasContext('people-canvas'),
                textCxt = wx.createCanvasContext('text-canvas'),
                txtJuhigh = new JuhighText(textCxt,t.words,platform),
                peoJuhigh = new JuhighPeople(peopleCxt,t.words,platform);


            txtJuhigh.init(function(){
                wx.canvasToTempFilePath({
                  x: 0,
                  y: 0,
                  // destWidth: txtJuhigh.canvas.width,
                  // destHeight: txtJuhigh.canvas.height,
                  canvasId: 'text-canvas',
                  success: function(res) {
                      // console.log('end',res.tempFilePath);
                      t.textImg = res.tempFilePath;
                  },
                  fail: function(){}
                })
            });
            peoJuhigh.init(function(){
                wx.canvasToTempFilePath({
                  x: 0,
                  y: 0,
                  // destWidth: peoJuhigh.canvas.width,
                  // destHeight: peoJuhigh.canvas.height,
                  canvasId: 'people-canvas',
                  success: function(res) {
                      // console.log('end',res.tempFilePath);
                      t.peopleImg = res.tempFilePath;
                  },
                  fail: function(){}
                })
            });

        }
    },
    toSave(method){

        var t = this,platform = t.$parent.globalData.platform,
            canvas = wx.createCanvasContext('canvas');

        if(!t.words){
            return;
        }

        canvas.width = posJson[platform][t.type].canvas.w;
        canvas.height = posJson[platform][t.type].canvas.h;

        if(t.bgColor !== 'transparent'){
            canvas.setFillStyle('#'+t.bgColor);
            canvas.fillRect(0, 0, canvas.width, canvas.height);
        }
        // setTimeout(function(){
        //     canvas.clearRect(0, 0, canvas.width, canvas.height);
        //     canvas.draw();
        // },2000);
        // canvas.draw();
        // return;

        canvas.drawImage(t.peopleImg, 0,0,canvas.width/2,canvas.height/2);
        canvas.drawImage(t.textImg, 0,0,canvas.width/2,canvas.height/2);


        canvas.draw(false,function(){
            wx.canvasToTempFilePath({
              x: 0,
              y: 0,
              canvasId: 'canvas',
              success: function(res) {
                  // console.log('draw end',res.tempFilePath);
                  t.resultImg = res.tempFilePath;
                  if(method == 'save'){
                      wx.saveImageToPhotosAlbum({
                          filePath: res.tempFilePath,
                          success: function(){
                              wx.showToast({
                                  title: '成功',
                                  icon: 'success',
                                  duration: 2000
                              });
                              setTimeout(()=>{
                                  canvas.clearRect(0, 0, canvas.width, canvas.height);
                                  canvas.draw();
                              },10);
                          }
                      })
                  }else{
                      wx.previewImage({
                          current: t.resultImg,
                          urls: [t.resultImg]
                      });
                      setTimeout(()=>{
                          canvas.clearRect(0, 0, canvas.width, canvas.height);
                          canvas.draw();
                      },10);
                  }

              },
              fail: function(){
                console.log('fail');
              }
            })
        })

    }
  }
}
</script>

<style lang="scss">
@import '../libs/common.scss';
.container {
    padding: 20rpx;
}
.title {
    padding-bottom: 20rpx;
    text-align: center;
    font-size: 40rpx;
    color: #333;
}
.content {
    padding-bottom: 20rpx;
    textarea {
        width: 100%;
        height: 220rpx;
        padding: 10rpx;
        box-sizing: border-box;
        border: 1rpx solid #ddd;
        border-radius: 4rpx;
        font-size: 28rpx;
    }
}
.area-title{
    display: flex;
    flex-direction: column;
    padding: 0 20rpx;
    margin-bottom: 15rpx;
    font-size: 32rpx;
    text-align: center;
    font-weight: bold;
    color: #111;
}

.color-select{
    display: flex;
    padding: 20rpx 0;
    view{
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 28rpx;
        color: #333;
        &.active{
            image,text{
                border: 4rpx solid #000;
            }
        }
        image,text{
            width: 38rpx;
            height: 38rpx;
            border: 1rpx solid #dedede;
            margin-right: 5rpx;
            box-sizing: border-box;
        }
        text.bg1{
            background: #ffffff;
        }
        text.bg2{
            background: #ff01ae;
        }
        text.bg3{
            background: #28d7b0;
        }
        text.bg4{
            background: #77cff0;
        }
    }
}

.color-custom{
    display: flex;
    align-items: center;
    padding: 20rpx 0 20rpx;
    height: 60rpx;
    text{
        width: 200rpx;
        display: inline-flex;
        height: 60rpx;
        font-size: 28rpx;
        align-items: center;
    }
    input{
        display: inline-flex;
        width: 200rpx;
        height: 60rpx;
        font-size: 24rpx;
        padding-left: 20rpx;
        align-items: center;
    }
}

.result {
    padding-top: 30rpx;
    .result-warp{
        width: 500rpx;
        margin: 0 auto;
        border: 1rpx solid #dedede;
        border-radius: 4rpx;
    }
    canvas{
        width: 500rpx;
        height: 500rpx;
    }
}
.preview{
    position: relative;
    width: 500rpx;
    height: 500rpx;
    margin: 0 auto;
    border: 1rpx solid #dedede;
    border-radius: 4rpx;
    margin-bottom: 20rpx;
    canvas{
        position: absolute;
        top: 0;
        left: 0;
        width: 500rpx;
        height: 500rpx;
    }

}
.text-bg{
    position: absolute;
    top: 0;
    left: 0;
    font-size: 50rpx;
    color: #999;
    view{
        width: 500rpx;
        height: 500rpx;
        display: flex;
        justify-content: center;
        align-items: center;
    }
}


.btns {
    display: flex;
    text {
        flex: 1;
        display: flex;
        justify-content: center;
        align-items: center;
        box-sizing: border-box;
        border-radius: 4px;
        height: 80rpx;
        font-size: 26rpx;
    }
}
.btn-clear {
    margin-right: 20rpx;
    border: 1rpx solid #38b7ea;
    color: #38b7ea;
    font-weight: bold;
    background: #fff;
}
.btn-save {
    margin-left: 20rpx;
    background: #38b7ea;
    color: #fff;
    font-size: 30rpx;
    font-weight: bold;
}
.btn-disable{
    opacity: .5;
}


</style>
